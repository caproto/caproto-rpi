# An ansible role to configure python3.6 on a Raspberry Pi.
# to get started, ensure you have ansible installed:
#  $ sudo apt install ansible
# Then run this playbook:
#  $ ansible-playbook -i localhost, python3.6.yml
# Then you can get started:
#  $ python3.6
#
---
- name: "python{{version}} runtime&build dependencies"
  become: yes
  apt: name={{item}} update_cache=true cache_valid_time=600
  with_items:
  - build-essential
  - libbz2-dev
  - libdb5.3-dev
  - libexpat1-dev
  - libffi-dev
  - libgdbm-dev
  - liblzma-dev
  - libncurses5-dev
  - libncursesw5-dev
  - libreadline6-dev
  - libsqlite3-dev
  - libssl-dev
  - tk-dev
  - zlib1g-dev
- name: "Download python{{version}}"
  get_url:
    url="https://www.python.org/ftp/python/{{version}}/Python-{{version}}.tar.xz"
    dest="/tmp/Python-{{version}}.tar.xz"
- name: "Unarchive python{{version}}"
  unarchive:
   src="/tmp/Python-{{version}}.tar.xz"
   dest="/tmp/"
   copy=no
   creates="/tmp/Python-{{version}}"
- name: "configure python{{version}} build"
  command: ./configure
  args:
    chdir: "/tmp/Python-{{version}}"
    creates: "/tmp/Python-{{version}}/Makefile"
- name: "build python{{version}}"
  # not using make module to be able to use -j and creates option to fully skip step
  command: make -j{{threads}}
  args:
    chdir: "/tmp/Python-{{version}}"
    creates: "/tmp/Python-{{version}}/python"
- name: "install python{{version}}"
  become: yes
  make:
    chdir: "/tmp/Python-{{version}}"
    target: altinstall
- name: Configure pip to look for wheels from piwheels.org.
  ini_file:
    path: /etc/pip.conf
    section: global
    option: extra-index-url
    value: https://www.piwheels.org/simple
    mode: '0600'
    backup: yes
